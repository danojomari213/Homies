"use strict";const isObjNotEmpty=e=>!Object.values(e).every(e=>null===e);class Applicant{constructor(e={first_name:null,middle_name:null,last_name:null,suffix_name:null,email:null,contact_number:null},i=!1){this.debugMode=i;let t={};for(var a in e)t[a]=e[a];this.applicant=t,this.debugMode&&console.info("A new applicant instance is created")}updateApplicantInfo(e={first_name:null,middle_name:null,last_name:null,suffix_name:null,email:null,contact_number:null}){for(var i in e)this.applicant[i]=e[i];this.debugMode&&console.info("Applicant information has been updated")}getApplicantInfo(){return this.applicant}}class Resume extends Applicant{constructor(e,i=!1){super(e,i),this.debugMode=i,this.resume={summary:null,experiences:[],education:[],certifications:[],skills:[],awards:[]}}id(e){return`${e}-${moment().format("YYMMDD")}-${100+Math.round(100*Math.random()|0)}`}getResumeInfo(){return{applicant:super.getApplicantInfo(),resume:this.resume}}updateSummary(e){this.resume.summary=e,this.debugMode&&console.info("A summary has been updated.")}getSummary(){return this.resume.summary}addExperience(e={job_title:null,company:null,start_month:null,start_year:null,end_month:null,end_year:null,description:null}){if(isObjNotEmpty(e)){let t={experience_id:this.id("exp")};for(var i in e)t[i]=e[i];this.resume.experiences.push(t),this.debugMode&&console.info("An experience has been added.")}}removeExperience(e){this.resume.experiences.splice(this.resume.experiences.map(e=>e.experience_id).indexOf(e),1),this.debugMode&&console.info("An experience has been removed.")}getExperiences(e=null){return e?this.resume.experiences[this.resume.experiences.findIndex(i=>i.experience_id==e)]:this.resume.experiences}updateExperience(e,i={job_title:null,company:null,start_month:null,start_year:null,end_month:null,end_year:null,description:null}){for(var t in i)this.resume.experiences[this.resume.experiences.findIndex(i=>i.experience_id==e)][t]=i[t];this.debugMode&&console.info("An experience has been updated")}addEducation(e={school:null,degree:null,study_field:null,start_year:null,end_year:null,description:null}){if(isObjNotEmpty(e)){let t={education_id:this.id("educ")};for(var i in e)t[i]=e[i];this.resume.education.push(t),this.debugMode&&console.info("An education has been added.")}}removeEducation(e){this.resume.education.splice(this.resume.education.map(e=>e.education_id).indexOf(e),1),this.debugMode&&console.info("An education has been removed.")}getEducation(e=null){return e?this.resume.education[this.resume.education.findIndex(i=>i.education_id==e)]:this.resume.education}updateEducation(e,i={school:null,degree:null,study_field:null,start_year:null,end_year:null,description:null}){for(var t in i)this.resume.education[this.resume.education.findIndex(i=>i.education_id==e)][t]=i[t];this.debugMode&&console.info("An experience has been updated")}addCertification(e={name:null,organization:null,credential_id:null,issue_month:null,issue_year:null,experience_month:null,experience_year:null}){if(isObjNotEmpty(e)){let t={certification_id:this.id("cert")};for(var i in e)t[i]=e[i];this.resume.certifications.push(t),this.debugMode&&console.info("A certification has been added.")}}removeCertification(e){this.resume.certifications.splice(this.resume.certifications.map(e=>e.certification_id).indexOf(e),1),this.debugMode&&console.info("A certification has been removed.")}getCertifications(e=null){return e?this.resume.certifications[this.resume.certifications.findIndex(i=>i.certification_id==e)]:this.resume.certifications}updateCertification(e,i={name:null,organization:null,credential_id:null,issue_month:null,issue_year:null,experience_month:null,experience_year:null}){for(var t in i)this.resume.certifications[this.resume.certifications.findIndex(i=>i.certification_id==e)][t]=i[t];this.debugMode&&console.info("An experience has been updated")}addSkill(e){e&&(this.resume.skills.push({skill_id:this.id("skill"),name:e}),this.debugMode&&console.info("A new skill has been added"))}getSkills(e){return e?this.resume.skills[this.resume.skills.findIndex(i=>i.skill_id==e)]:this.resume.skills}removeSkill(e){this.resume.skills.splice(this.resume.skills.map(e=>e.skill_id).indexOf(e),1),this.debugMode&&console.info("A skill has been removed.")}updateSkill(e,i=null){this.resume.skills[this.resume.skills.findIndex(i=>i.skill_id==e)].name=i,this.debugMode&&console.info("A skill has been added")}addAward(e={name:null,issuer:null,issue_month:null,issue_year:null,description:null}){if(isObjNotEmpty(e)){let t={award_id:this.id("award")};for(var i in e)t[i]=e[i];this.resume.awards.push(t),this.debugMode&&console.info("An award has been added.")}}getAwards(e){return e?this.resume.awards[this.resume.awards.findIndex(i=>i.award_id==e)]:this.resume.awards}removeAward(e){this.resume.awards.splice(this.resume.awards.map(e=>e.award_id).indexOf(e),1),this.debugMode&&console.info("An award has been removed.")}updateAward(e,i={name:null,issuer:null,issue_month:null,issue_year:null,description:null}){for(var t in i)this.resume.awards[this.resume.awards.findIndex(i=>i.award_id==e)][t]=i[t];this.debugMode&&console.info("An award has been updated")}}var resume=new Resume;$("#editApplicantInfoBtn").on("click",()=>{const e=resume.getApplicantInfo();setValue({"#editApplicantInfo_firstName":e.first_name,"#editApplicantInfo_middleName":e.middle_name,"#editApplicantInfo_lastName":e.last_name,"#editApplicantInfo_suffixName":e.suffix_name,"#editApplicantInfo_email":e.email,"#editApplicantInfo_contactNumber":e.contact_number}),showModal("#editApplicantInfoModal")}),validateForm("#updateApplicantInfoForm",{rules:{firstName:{required:!0},lastName:{required:!0},email:{required:!0,email:!0},contactNumber:{required:!0}},messages:{firstName:{required:"Your first name is required"},lastName:{required:"Your last name is required"},email:{required:"You email is required",email:"This must be a valid email"},contactNumber:{required:"Your contact number is required"}},submitHandler:()=>{const e=generateFormData("#updateApplicantInfoForm"),i={first_name:e.get("firstName"),middle_name:e.get("middleName"),last_name:e.get("lastName"),suffix_name:e.get("suffixName"),email:e.get("email"),contact_number:e.get("contactNumber")};resume.updateApplicantInfo(i);const t=resume.getApplicantInfo();return setContent({"#resume_applicantFullName":formatName("F M. L, S",{firstName:t.first_name,middleName:t.middle_name,lastName:t.last_name,suffixName:t.suffix_name}),"#resume_applicantEmail":t.email,"#resume_applicantContactNumber":t.contact_number}),hideModal("#editApplicantInfoModal"),toastr.info("Your information has been updated"),!1}}),onHideModal("#editApplicantInfoModal",()=>resetForm("#updateApplicantInfoForm")),$("#editSummaryBtn").on("click",()=>{setValue("#editSummary_summary",resume.getSummary()),showModal("#editSummaryModal")}),validateForm("#updateSummaryForm",{submitHandler:()=>{const e=generateFormData("#updateSummaryForm").get("summary");return resume.updateSummary(e),isEmptyOrNull(e)?setContent("#resume_summary",'\n                <div class="px-5 py-3 text-center font-italic text-muted">This optional section can help you stand out to recruiters. If this section is empty, it will not appear on your resume.</div>\n            '):setContent("#resume_summary",`<p>${resume.getSummary()}</p>`),hideModal("#editSummaryModal"),toastr.info("Your resume summary has been updated"),!1}}),onHideModal("#editSummaryModal",()=>resetForm("#updateSummaryForm")),$("#addExperienceBtn").on("click",()=>{showModal("#addExperienceModal")}),validateForm("#addExperienceForm",{rules:{jobTitle:{required:!0},company:{required:!0}},messages:{jobTitle:{required:"Job title is required"},company:{required:"Company is required"}},submitHandler:()=>{const e=generateFormData("#addExperienceForm"),i={job_title:e.get("jobTitle"),company:e.get("company")};return resume.addExperience(i),reloadExperiences(),hideModal("#addExperienceModal"),toastr.success("Your experience has been added"),!1}}),onHideModal("#addExperienceModal",()=>resetForm("#addExperienceForm"));const reloadExperiences=()=>{const e=resume.getExperiences();if(console.log(e),0===e.length)setContent("#resume_experiences",'\n            <div class="px-5 py-3 text-center font-italic text-muted">This section is empty and wonâ€™t appear in your resume.</div>\n        ');else{let i="";e.forEach(e=>{i+=`\n                <div class="d-flex justify-content-between mb-3" id="${e.experience_id}">\n                    <div class="mr-3">\n                        <i class="fas fa-star text-secondary"></i>\n                    </div>\n                    <div class="flex-fill">\n                        <div class="font-weight-bold">${e.job_title}</div>\n                        <div>${e.company}</div>\n                        <div class="text-muted small">March 2021 - January 2022 (10 months)</div>\n                        <div class="mt-2">Lorem ipsum dolor sit, amet consectetur adipisicing elit. Ut, quam!</div>\n                    </div>\n                    <div>\n                        <div class="btn btn-sm btn-default" onclick="editExperience('${e.experience_id}')">\n                            <i class="fas fa-pen"></i>\n                        </div>\n                    </div>\n                </div>\n            `}),setContent("#resume_experiences",i)}},editExperience=e=>{const i=resume.getExperiences(e);setValue({"#editExperience_experienceID":i.experience_id,"#editExperience_jobTitle":i.job_title,"#editExperience_company":i.company}),showModal("#editExperienceModal")};validateForm("#editExperienceForm",{rules:{jobTitle:{required:!0},company:{required:!0}},messages:{jobTitle:{required:"Job title is required"},company:{required:"Company is required"}},submitHandler:()=>{const e=generateFormData("#editExperienceForm"),i={job_title:e.get("jobTitle"),company:e.get("company")};return resume.updateExperience(e.get("experienceID"),i),reloadExperiences(),hideModal("#editExperienceModal"),!1}}),onHideModal("#editExperienceModal",()=>resetForm("#editExperienceForm"));const removeExperience=()=>{showModal("#removeExperienceModal")};$("#addEducationBtn").on("click",()=>{showModal("#addEducationModal")}),validateForm("#addEducationForm",{rules:{school:{required:!0}},messages:{school:{required:"Please fill up this field"}},submitHandler:()=>{const e={school:generateFormData("#addEducationForm").get("school")};return resume.addEducation(e),reloadEducation(),hideModal("#addEducationModal"),toastr.success("Your education has been added"),!1}}),onHideModal("#addEducationModal",()=>resetForm("#addEducationForm"));const reloadEducation=()=>{const e=resume.getEducation();if(0===e.length)setContent("#resume_education",'\n            <div class="px-5 py-3 text-center font-italic text-muted">This section is empty and wonâ€™t appear in your resume.</div>\n        ');else{let i="";e.forEach(e=>{i+=`\n                <div class="d-flex justify-content-between mb-3">\n                    <div class="mr-3">\n                        <i class="fas fa-graduation-cap text-secondary"></i>\n                    </div>\n                    <div class="flex-fill">\n                        <div class="font-weight-bold">${e.school}</div>\n                        <div>Bachelor of Lorem Degree Title</div>\n                        <div class="text-muted small">2021 - 2022</div>\n                    </div>\n                    <div>\n                        <div class="btn btn-sm btn-default" onclick="editEducation('${e.education_id}')">\n                            <i class="fas fa-pen"></i>\n                        </div>\n                    </div>\n                </div>\n            `}),setContent("#resume_education",i)}},editEducation=e=>{const i=resume.getEducation(e);setValue({"#editEducation_educationID":i.education_id,"#editEducation_school":i.school}),showModal("#editEducationModal")};onHideModal("#editEducationModal",()=>resetForm("#editEducationForm")),validateForm("#editEducationForm",{rules:{school:{required:!0}},messages:{school:{required:"Please fill up this field"}},submitHandler:()=>{const e=generateFormData("#editEducationForm"),i={school:e.get("school")};return resume.updateEducation(e.get("educationID"),i),reloadEducation(),hideModal("#editEducationModal"),toastr.info("Your education has been updated"),!1}}),$("#addCertificationBtn").on("click",()=>{showModal("#addCertificationModal")}),validateForm("#addCertificationForm",{rules:{name:{required:!0}},messages:{name:{required:"This is a required field"}},submitHandler:()=>{const e={name:generateFormData("#addCertificationForm").get("name")};return resume.addCertification(e),reloadCertifications(),hideModal("#addCertificationModal"),toastr.success("Your license/certification has been added"),!1}}),onHideModal("#addCertificationModal",()=>resetForm("#addCertificationForm"));const reloadCertifications=()=>{const e=resume.getCertifications();if(0===e)setContent("#resume_certifications",'\n            <div class="px-5 py-3 text-center font-italic text-muted">This section is empty and wonâ€™t appear in your resume.</div>\n        ');else{let i="";e.forEach(e=>{i+=`\n                <div class="d-flex justify-content-between mb-3">\n                    <div class="mr-3">\n                        <i class="fas fa-award text-secondary"></i>\n                    </div>\n                    <div class="flex-fill">\n                        <div class="font-weight-bold">${e.name}</div>\n                        <div>Issuer Name Sample 1</div>\n                        <div>Credential ID: 123-456-7890</div>\n                        <div class="text-muted small">Issued 2021 - Expires at 2022</div>\n                    </div>\n                    <div>\n                        <div class="btn btn-sm btn-default" onclick="editCertification('${e.certification_id}')">\n                            <i class="fas fa-pen"></i>\n                        </div>\n                    </div>\n                </div>\n            `}),setContent("#resume_certifications",i)}},editCertification=e=>{const i=resume.getCertifications(e);setValue({"#editCertification_certificationID":i.certification_id,"#editCertification_name":i.name}),showModal("#editCertificationModal")};validateForm("#editCertificationForm",{rules:{name:{required:!0}},messages:{name:{required:"This is a required field"}},submitHandler:()=>{const e=generateFormData("#editCertificationForm"),i={name:e.get("name")};return resume.updateCertification(e.get("certificationID"),i),reloadCertifications(),hideModal("#editCertificationModal"),toastr.info("Your license/certification has been updated"),!1}}),onHideModal("#editCertificationModal",()=>resetForm("#editCertificationForm")),$("#addAwardBtn").on("click",()=>{showModal("#addAwardModal")}),validateForm("#addAwardForm",{rules:{name:{required:!0}},messages:{name:{required:"Please include the name of your honor or award"}},submitHandler:()=>{const e={name:generateFormData("#addAwardForm").get("name")};return resume.addAward(e),reloadAwards(),hideModal("#addAwardModal"),toastr.success("Your award has been added successfully"),!1}}),onHideModal("#addAwardModal",()=>resetForm("#addAwardForm"));const reloadAwards=()=>{const e=resume.getAwards();if(0===e.length)setContent("#resume_awards",'\n            <div class="px-5 py-3 text-center font-italic text-muted">This section is empty and wonâ€™t appear in your resume.</div>\n        ');else{let i="";e.forEach(e=>{i+=`\n                <div class="d-flex justify-content-between mb-3">\n                    <div class="mr-3">\n                        <i class="fas fa-award text-secondary"></i>\n                    </div>\n                    <div class="flex-fill">\n                        <div class="font-weight-bold">${e.name}</div>\n                        <div>Issuer Name Sample 1</div>\n                        <div>Credential ID: 123-456-7890</div>\n                        <div class="text-muted small">Issued 2021 - Expires at 2022</div>\n                    </div>\n                    <div>\n                        <div class="btn btn-sm btn-default" onclick="editAward('${e.award_id}')">\n                            <i class="fas fa-pen"></i>\n                        </div>\n                    </div>\n                </div>\n            `}),setContent("#resume_awards",i)}},editAward=e=>{const i=resume.getAwards(e);setValue({"#editAward_awardID":i.award_id,"#editAward_name":i.name}),showModal("#editAwardModal")};onHideModal("#editAwardModal",()=>resetForm("#editAwardForm")),validateForm("#editAwardForm",{rules:{name:{required:!0}},messages:{name:{required:"Please include the name of your honor or award"}},submitHandler:()=>{const e=generateFormData("#editAwardForm"),i={name:e.get("name")};return resume.updateAward(e.get("awardID"),i),reloadAwards(),hideModal("#editAwardModal"),toastr.info("Your award has been updated"),!1}});