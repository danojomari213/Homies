"use strict";const getUserNotifications=(e={debugMode:!1,apiRoute:"",webRoute:"",notifTypes:{}})=>GET_ajax(`${e.apiRoute}notifications`,{success:t=>{if(t){e.debugMode&&console.log(t);let n="",i=0;const a=e.notifTypes;t.length>0?t.forEach(t=>{const s=a[t.notification_type];n+=`\n                        <a href="${e.webRoute}${t.link}" class="dropdown-item d-flex"${(()=>t.is_unread?` onclick="unreadNotification('${t.notification_id}')"`:"")()}>\n                            <div class="nav-icon">\n                                <div class="d-flex align-items-center justify-content-center bg-secondary rounded-circle mr-2" style="height: 2.5rem; width: 2.5rem">\n                                    <i class="fas fa-${s.icon}" style="font-size: 17.5px"></i> \n                                </div>\n                            </div>\n                            <div class="flex-fill">\n                                <div class="text-wrap${t.is_unread?"":" notif-read"}" style="line-height: 1.25">\n                                    <span>${s.subtypes[t.notification_subtype].getContent(t)}</span>\n                                </div>\n                                <div class="small">\n                                    <span>\n                                        <i class="small fas fa-clock"></i>\n                                    </span>\n                                    <span>${(()=>moment(t.created_at).isBefore(moment().subtract(1,"week"))?formatDateTime(t.created_at,"Full Date"):fromNow(t.created_at))()}</span>\n                                </div>\n                            </div>\n                            ${(()=>t.is_unread?(i++,'<div class="align-self-center">\n                                <span class="text-danger">&#11044;</span>\n                            </div>'):"")()}\n                        </a>\n                    `}):n='\n                <div class="text-center text-muted p-5">\n                    Hey! You don\'t have notifications yet.\n                </div>\n            ';const s=()=>i>99?"99+":0===i?"":i;setContent({"#notifications":n,"#totalNotifications":(()=>{const e=t.length;return e>0?`You have ${e} ${pluralize("notification",e)} in total`:""})(),"#notifCounter":s,"#notifCounterForDropdown":s})}},error:()=>setContent("#notifications",'\n        <div class="text-center text-muted p-5">\n            Sorry, but we detect an error in getting your notifications. Please refresh the page.\n        </div>\n    ')}),setManpowerRequestTimeline=(e,t)=>{let n=[];const i=t.request_status,a=t.rejected_at,s=t.created_at,m=t.manpower_request_requested_by,o=formatName("F M. L, S",{firstName:m.first_name,middleName:m.middle_name,lastName:m.last_name,suffixName:m.extension_name});n.push({icon:"edit",iconTheme:"info",dateTime:s,timelineTitle:"Created",timelineBody:`\n            <div class="small mb-3">\n                <div>This request has been created by:</div>\n                <div class="ml-3">\n                    <div><b>${o}</b></div>\n                    <div>${m.position.name+", "+m.position.sub_department.name}</div>\n                </div>\n            </div>\n            ${TEMPLATE.SUBTEXT(formatDateTime(s,"Full Date"))}\n            ${TEMPLATE.SUBTEXT(formatDateTime(s,"Time"))}\n        `});const d=t.signed_at;if(isEmptyOrNull(d)){if("Rejected for signing"===i){const e=t.manpower_request_rejected_by,i=formatName("F M. L, S",{firstName:e.first_name,middleName:e.middle_name,lastName:e.last_name,suffixName:e.suffix_name});n.push({icon:"times",iconTheme:"danger",dateTime:a,timelineTitle:"Rejected",timelineBody:`\n                <div class="small mb-3">\n                    <div>This request has been rejected for signing by:</div>\n                    <div class="ml-3">\n                        <div><b>${i}</b></div>\n                        <div>${e.position.name+", "+e.position.sub_department.name}</div>\n                    </div>\n                </div>\n                ${TEMPLATE.SUBTEXT(formatDateTime(a,"Full Date"))}\n                ${TEMPLATE.SUBTEXT(formatDateTime(a,"Time"))}\n            `})}}else{const e=t.manpower_request_signed_by,i=formatName("F M. L, S",{firstName:e.first_name,middleName:e.middle_name,lastName:e.last_name,suffixName:e.suffix_name});n.push({icon:"file-signature",iconTheme:"primary",dateTime:d,timelineTitle:"Signed",timelineBody:`\n                <div class="small mb-3">\n                    <div>This request has been signed by:</div>\n                    <div class="ml-3">\n                        <div><b>${i}</b></div>\n                        <div>${e.position.name+", "+e.position.sub_department.name}</div>\n                    </div>\n                </div>\n                ${TEMPLATE.SUBTEXT(formatDateTime(d,"Full Date"))}\n                ${TEMPLATE.SUBTEXT(formatDateTime(d,"Time"))}\n            `})}const r=t.reviewed_at;if(isEmptyOrNull(r)){if("Rejected for approval"===i){const e=t.manpower_request_rejected_by,i=formatName("F M. L, S",{firstName:e.first_name,middleName:e.middle_name,lastName:e.last_name,suffixName:e.suffix_name});n.push({icon:"times",iconTheme:"danger",dateTime:a,timelineTitle:"Rejected",timelineBody:`\n                <div class="small mb-3">\n                    <div>This request has been rejected for signing by:</div>\n                    <div class="ml-3">\n                        <div><b>${i}</b></div>\n                        <div>${e.position.name+", "+e.position.sub_department.name}</div>\n                    </div>\n                </div>\n                ${TEMPLATE.SUBTEXT(formatDateTime(a,"Full Date"))}\n                ${TEMPLATE.SUBTEXT(formatDateTime(a,"Time"))}\n            `})}}else{const e=t.manpower_request_reviewed_by,i=formatName("F M. L, S",{firstName:e.first_name,middleName:e.middle_name,lastName:e.last_name,suffixName:e.suffix_name});n.push({icon:"thumbs-up",iconTheme:"success",dateTime:r,timelineTitle:"Approved",timelineBody:`\n                <div class="small mb-3">\n                    <div>This request has been reviewed and approved by:</div>\n                    <div class="ml-3">\n                        <div><b>${i}</b></div>\n                        <div>${e.position.name+", "+e.position.sub_department.name}</div>\n                    </div>\n                </div>\n                ${TEMPLATE.SUBTEXT(formatDateTime(r,"Full Date"))}\n                ${TEMPLATE.SUBTEXT(formatDateTime(r,"Time"))}\n            `})}const l=t.completed_at;isEmptyOrNull(l)||n.push({icon:"check",iconTheme:"info",dateTime:l,timelineTitle:"Completed",timelineBody:`\n                <div class="small mb-3">This request had been marked as completed</b></div>\n                ${TEMPLATE.SUBTEXT(formatDateTime(l,"Full Date"))}\n                ${TEMPLATE.SUBTEXT(formatDateTime(l,"Time"))}\n            `}),setTimeline(e,{title:"Manpower Request Timeline",timelineData:n})},setJobPostTimeline=(e,t)=>{let n=[];const i=t.job_post_posted_by,a=formatName("F M. L, S",{firstName:i.first_name,middleName:i.middle_name,lastName:i.last_name,suffixName:i.extension_name}),s=t.created_at;n.push({icon:"edit",iconTheme:"info",dateTime:s,timelineTitle:"Created",timelineBody:`\n            <div class="small mb-3">You, <span class="font-weight-bold">${a}</span>, created this job post</div>\n            ${TEMPLATE.SUBTEXT(formatDateTime(s,"Full Date"))}\n            ${TEMPLATE.SUBTEXT(formatDateTime(s,"Time"))}\n        `});const m=t.updated_at;n.push({icon:"edit",iconTheme:"info",dateTime:m,timelineTitle:"Last Updated",timelineBody:`\n            <div class="small mb-3">You are the last person updated this job post</div>\n            ${TEMPLATE.SUBTEXT(formatDateTime(m,"Full Date"))}\n            ${TEMPLATE.SUBTEXT(formatDateTime(m,"Time"))}\n        `}),setTimeline(e,{title:"Job Post Timeline",timelineData:n})},setApplicantTimeline=(e,t)=>{let n=[];const i=t.created_at,a=formatName("F M. L, S",{firstName:t.first_name,middleName:t.middle_name,lastName:t.last_name,suffixName:t.suffix_name});n.push({icon:"file-export",iconTheme:"primary",dateTime:i,timelineTitle:"Applied",timelineBody:`\n            <div class="small mb-3">\n                <div>Application was submitted by:</div>\n                <div class="ml-3">\n                    <div><b>${a}</b></div>\n                    <div>Applicant/Candidate</div>\n                </div>\n            </div>\n            ${TEMPLATE.SUBTEXT(formatDateTime(i,"Full Date"))}\n            ${TEMPLATE.SUBTEXT(formatDateTime(i,"Time"))}\n        `});const s=t.evaluated_at,m=t.applicant_evaluated_by;if(!isEmptyOrNull(s)&&!isEmptyOrNull(m)){const e=formatName("F M. L, S",{firstName:m.first_name,middleName:m.middle_name,lastName:m.last_name,suffixName:m.extension_name});n.push({icon:"check",iconTheme:"success",dateTime:s,timelineTitle:"Evaluated",timelineBody:`\n                <div class="small mb-3">\n                    <div>Evaluation was done by:</div>\n                    <div class="ml-3">\n                        <div><b>${e}</b></div>\n                        <div>${m.position.name}</div>\n                        <div>${m.position.sub_department.name}</div>\n                    </div>\n                </div>\n                ${TEMPLATE.SUBTEXT(formatDateTime(s,"Full Date"))}\n                ${TEMPLATE.SUBTEXT(formatDateTime(s,"Time"))}\n            `})}const o=t.screened_at,d=t.applicant_screened_by;if(!isEmptyOrNull(o)&&!isEmptyOrNull(d)){const e=formatName("F M. L, S",{firstName:d.first_name,middleName:d.middle_name,lastName:d.last_name,suffixName:d.extension_name});n.push({icon:"check",iconTheme:"warning",dateTime:o,timelineTitle:"Screened",timelineBody:`\n                <div class="small mb-3">\n                    <div>Screening was done by:</div>\n                    <div class="ml-3">\n                        <div><b>${e}</b></div>\n                        <div>${d.position.name}</div>\n                        <div>${d.position.sub_department.name}</div>\n                    </div>\n                </div>\n                ${TEMPLATE.SUBTEXT(formatDateTime(o,"Full Date"))}\n                ${TEMPLATE.SUBTEXT(formatDateTime(o,"Time"))}\n            `})}const r=t.hired_at,l=t.applicant_hired_by;if(!isEmptyOrNull(r)&&!isEmptyOrNull(l)){const e=formatName("F M. L, S",{firstName:l.first_name,middleName:l.middle_name,lastName:l.last_name,suffixName:l.extension_name});n.push({icon:"handshake",iconTheme:"success",dateTime:r,timelineTitle:"Hired",timelineBody:`\n                <div class="small mb-3">\n                    <div>Hiring was done by:</div>\n                    <div class="ml-3">\n                        <div><b>${e}</b></div>\n                        <div>${l.position.name}</div>\n                        <div>${l.position.sub_department.name}</div>\n                    </div>\n                </div>\n                ${TEMPLATE.SUBTEXT(formatDateTime(r,"Full Date"))}\n                ${TEMPLATE.SUBTEXT(formatDateTime(r,"Time"))}\n            `})}const T=t.status;if("Rejected from evaluation"===T||"Rejected from screening"===T||"Rejected from interview"===T){const e=t.rejected_at,i=t.applicant_rejected_by;if(!isEmptyOrNull(e)&&!isEmptyOrNull(i)){const a=formatName("F M. L, S",{firstName:i.first_name,middleName:i.middle_name,lastName:i.last_name,suffixName:i.extension_name});n.push({icon:"times",iconTheme:"danger",dateTime:e,timelineTitle:T,timelineBody:`\n                    <div class="small mb-3">\n                        <div>Hiring was done by:</div>\n                        <div class="ml-3">\n                            <div><b>${a}</b></div>\n                            <div>${i.position.name}</div>\n                            <div>${i.position.sub_department.name}</div>\n                        </div>\n                    </div>\n                    <div class="small mb-3">\n                        <div>Remarks:</div>\n                        <div class="ml-3">\n                            <div class="font-weight-bold text-danger">${t.remarks}</div>\n                        </div>\n                    </div>\n                    ${TEMPLATE.SUBTEXT(formatDateTime(e,"Full Date"))}\n                    ${TEMPLATE.SUBTEXT(formatDateTime(e,"Time"))}\n                `})}}setTimeline(e,{title:"Applicant Timeline",timelineData:n})},setOnboardingEmployeeTaskTimeline=(e,t)=>{let n=[];const i=t.created_at,a=t.onboarding_employee_task_assigned_by,s=formatName("F M. L, S",{firstName:a.first_name,middleName:a.middle_name,lastName:a.last_name,suffixName:a.extension_name});n.push({icon:"clipboard",iconTheme:"primary",dateTime:i,timelineTitle:"Assigned",timelineBody:`\n            <div class="small mb-3">Task was created and assigned by <b>${s}</b></div>\n            ${TEMPLATE.SUBTEXT(formatDateTime(i,"Full Date"))}\n            ${TEMPLATE.SUBTEXT(formatDateTime(i,"Time"))}\n        `});const m=t.completed_at,o=t.onboarding_employee_task_completed_by;if(!isEmptyOrNull(m)&&!isEmptyOrNull(o)){const e=formatName("F M. L, S",{firstName:o.first_name,middleName:o.middle_name,lastName:o.last_name,suffixName:o.extension_name});n.push({icon:"check",iconTheme:"success",dateTime:m,timelineTitle:"Completed",timelineBody:`\n                <div class="small mb-3">Task was completed marked by <b>${e}</b></div>\n                ${TEMPLATE.SUBTEXT(formatDateTime(m,"Full Date"))}\n                ${TEMPLATE.SUBTEXT(formatDateTime(m,"Time"))}\n            `})}setTimeline(e,{title:"Onboarding Task Timeline",timelineData:n})},setManpowerRequestDocument=e=>{const t=e.manpower_request_requested_by,n=e.request_status;setContent("#requisitionNo",e.requisition_no),setContent("#requestorName",formatName("L, F M., S",{firstName:t.first_name,middleName:t.middle_name,lastName:t.last_name,suffixName:t.extension_name})),setContent("#requestorDepartment",t.position.name+", "+t.position.sub_department.name),setContent("#dateRequested",`\n        <div>${formatDateTime(e.created_at,"Date")}</div>\n        <div>${formatDateTime(e.created_at,"Time")}</div>\n    `),setContent("#deadline",()=>{const t=e.deadline;return isEmptyOrNull(t)?TEMPLATE.UNSET("No deadline has been set"):`\n                <div>${formatDateTime(t,"Date")}</div>\n                <div>${formatDateTime(t,"Time")}</div>\n            `}),setContent("#requestedPosition",e.vacant_position.name),setContent("#noOfStaffsNeeded",()=>{const t=e.staffs_needed;return`${t} new ${pluralize("staff",t)}`}),setContent("#employmentType",e.employment_type.name),setContent("#requestNature",e.request_nature),setContent("#suggestedSalary",()=>{const t=e.min_monthly_salary,n=e.max_monthly_salary;return isEmptyOrNull(t)&&isEmptyOrNull(n)?TEMPLATE.UNSET("No salary has been set"):`${formatCurrency(t)} - ${formatCurrency(n)}/month`}),setContent("#requestDescription",e.content),setContent("#signedBy",()=>{const t=e.manpower_request_signed_by;if("Rejected for signing"===e.request_status)return'<div class="text-danger">This request has been rejected for signing</div>';if(isEmptyOrNull(t))return TEMPLATE.UNSET("Not yet signed");return`\n                <div>${formatName("L, F M., S",{firstName:t.first_name,middleName:t.middle_name,lastName:t.last_name,suffixName:t.suffix_name})}</div>\n                ${TEMPLATE.SUBTEXT(t.position.name+", "+t.position.sub_department.name)}\n            `}),setContent("#signedAt",()=>{const t=e.signed_at;return isEmptyOrNull(t)?TEMPLATE.UNSET("No status"):TEMPLATE.NOWRAP([formatDateTime(t,"Date"),formatDateTime(t,"Time")])}),setContent("#approvedBy",()=>{const t=e.manpower_request_reviewed_by;return isEmptyOrNull(t)&&"Rejected for approval"!==e.request_status&&"Rejected for signing"!==e.request_status?TEMPLATE.UNSET("Not yet approved"):()=>{if("Rejected for signing"===e.request_status)return'<div class="text-danger">This request has been rejected</div>';if("Rejected for approval"===e.request_status)return'<div class="text-danger">This request has been rejected for approval</div>';return`\n                        <div>${formatName("L, F M., S",{firstName:t.first_name,middleName:t.middle_name,lastName:t.last_name,suffixName:t.suffix_name})}</div>\n                        ${TEMPLATE.SUBTEXT(t.position.name+", "+t.position.sub_department.name)}\n                    `}}),setContent("#approvedAt",()=>{const t=e.reviewed_at;return isEmptyOrNull(t)?TEMPLATE.UNSET("No status"):TEMPLATE.NOWRAP([formatDateTime(t,"Date"),formatDateTime(t,"Time")])});const i=e.completed_at;if(setContent("#completedAt",()=>isEmptyOrNull(i)?TEMPLATE.UNSET("No status"):TEMPLATE.NOWRAP([formatDateTime(i,"Date"),formatDateTime(i,"Time")])),"Completed"==n){const e=formatName("F M. L, S",{firstName:t.first_name,middleName:t.middle_name,lastName:t.last_name,suffixName:t.suffix_name});setContent("#manpowerRequestStatus",`\n            <div class="alert border-success">\n                <h5 class="text-success mb-0">This request has been completed</h5>\n                ${TEMPLATE.SUBTEXT(`Marked by: ${e}, ${t.position.name}`)}\n                ${TEMPLATE.SUBTEXT(`${formatDateTime(i,"Full DateTime")} (${fromNow(i)})`)}\n            </div>\n        `)}else if("Rejected for signing"==n||"Rejected for approval"==n){const n=e.manpower_request_rejected_by,i=formatName("F M. L, S",{firstName:n.first_name,middleName:n.middle_name,lastName:n.last_name,suffixName:n.suffix_name}),a=e.rejected_at;setContent("#manpowerRequestStatus",`\n            <div class="alert border-danger">\n                <h5 class="text-danger mb-0">This request has been ${e.request_status.toLowerCase()}</h5>\n                <div class="small text-secondary">Marked by: ${i}, ${t.position.name}</div>\n                <div class="small text-secondary">${formatDateTime(a,"Full DateTime")} (${fromNow(a)})</div>\n                <div class="mt-3">\n                    <div class="font-weight-bold">Details</div>\n                    <div class="ml-3 text-justify">${e.remarks}</div>\n                </div>\n            </div>\n        `)}else $("#manpowerRequestStatus").remove();$("#manpowerRequestDocumentLoader").remove(),showElement("#manpowerRequestDocumentContainer")},setJobPostDetails=e=>{const t=e.expiration_date;isEmptyOrNull(t)||isAfterToday(t)?setContent("#jobPostStatus",TEMPLATE.BADGE("info","On Going")):isBeforeToday(t)?setContent("#jobPostStatus",TEMPLATE.BADGE("danger","Ended")):setContent("#jobPostStatus",TEMPLATE.BADGE("warning","Last Day Today"));const n=e.manpower_request;setContent({"#postedAt":`Posted ${formatDateTime(e.created_at,"Date")}`,"#postedAtHumanized":fromNow(e.created_at),"#jobPostViews":formatNumber(e.views)+pluralize(" view",e.views),"#vacantPosition":n.vacant_position.name,"#employmentTypeForJobPost":n.employment_type.name,"#jobCategory":e.job_category.is_removed?'\n                <i class="fas fa-exclamation-triangle text-warning mr-1"></i>\n                <span class="font-italic text-secondary">Category is not set or removed</span>\n            ':e.job_category.name});const i=n.min_monthly_salary,a=n.max_monthly_salary;isEmptyOrNull(i)&&isEmptyOrNull(a)||!e.is_salary_visible?(hideElement("#salaryRangeDisplay"),setContent("#salaryRange","")):(showElement("#salaryRangeDisplay"),setContent("#salaryRange",`${formatCurrency(i)} - ${formatCurrency(a)}`));const s=e.expiration_date;isEmptyOrNull(s)?(hideElement("#openUntilDisplay"),setContent("#openUntil","")):(showElement("#openUntilDisplay"),setContent("#openUntil",formatDateTime(s,"Full Date"))),setContent("#jobDescription",e.content),setContent("#jobPostOptions",`\n        <a class="btn btn-sm btn-secondary btn-block" target="_blank" href="/careers/${jobPostID}">\n            ${TEMPLATE.ICON_LABEL("eye","View post in public portal")}\n        </a>\n        <a class="btn btn-sm btn-secondary btn-block" href="${ROUTE.WEB.H}job-posts/${jobPostID}/applicants">\n            ${TEMPLATE.ICON_LABEL("users","View applicants")}\n        </a>\n    `)},getOnboardingEmployeeTaskStatus=(e,t,n,i)=>{switch(e){case"Pending":return isAfterToday(t)&&isAfterToday(n)?TEMPLATE.BADGE("secondary",TEMPLATE.ICON_LABEL("stopwatch","Soon")):isBeforeToday(t)&&isAfterToday(n)?TEMPLATE.BADGE("warning",TEMPLATE.ICON_LABEL("exclamation-circle","Pending (Must working)")):TEMPLATE.BADGE("danger",TEMPLATE.ICON_LABEL("exclamation-triangle","Pending (Not worked)"));case"On Going":return isAfterToday(n)?TEMPLATE.BADGE("danger",TEMPLATE.ICON_LABEL("sync-alt","On Going")):TEMPLATE.BADGE("warning",TEMPLATE.ICON_LABEL("sync-alt","On Going (Must be done)"));case"Completed":return moment(i).isBefore(moment(n))?TEMPLATE.BADGE("success",TEMPLATE.ICON_LABEL("check","Completed (On Time)")):TEMPLATE.BADGE("success",TEMPLATE.ICON_LABEL("check","Completed (Late)"));default:return TEMPLATE.BADGE("light","Invalid data")}},setIntervieweeScoreSheet=(e,t)=>{setContent(e,"");let n=0;const i={General:'<span class="badge border border-primary text-primary">General</span>',Added:'<span class="badge border border-secondary text-secondary">Added</span>'};t.forEach((t,a)=>{const s=t.score;n+=s,$(e).append(`\n            <tr>\n                <td class="text-right">${a+1}</td>\n                <td width="100%">\n                    <div>${t.interview_question.question}</div>\n                    <div>${i[t.interview_question.type]}</div>\n                </td>\n                <td class="text-right">${formatNumber(s)}%</td>\n            </tr>\n        `)}),$(e).append(`\n        <tr>\n            <td colspan="2" class="text-right font-weight-bold">Average</td>\n            <td class="text-right font-weight-bold">${formatNumber(n/t.length)}%</td>\n        </tr>\n    `)};